spring.data.mongodb.database=Abc
spring.data.mongodb.uri=mongodb+srv://root:root@cluster0.lhvo556.mongodb.net/Abc?retryWrites=true&w=majority&appName=Cluster0
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
server.port=3079
spring.profiles.active=prod


#
## kafka
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=my-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Redis connection
spring.cache.type=redis
#spring.redis.host=127.0.0.1
spring.redis.host=localhost
#spring.redis.host=redis-service.default.svc.cluster.local
spring.redis.port=6379
spring.redis.password=@#12345678

# Optional: connection pool
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.min-idle=1

## Enable Log4j2
#logging.config=classpath:log4j2.properties
#
## Prometheus
#management.endpoints.web.exposure.include=*
#management.endpoint.prometheus.enabled=true
#management.endpoints.web.base-path=/actuator


# === OpenAI Configuration ===
#spring.ai.openai.base-url=https://api.openai.com/v1/
##spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o-mini
#spring.ai.openai.chat.options.temperature=0.7
#spring.ai.openai.chat.options.max-tokens=512
#spring.ai.openai.chat.options.top-p=1.0

spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.chat.options.temperature=0.7
spring.ai.openai.chat.options.max-tokens=100